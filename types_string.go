// Code generated by "stringer -type=Element -output=types_string.go"; DO NOT EDIT.

package idl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidElement-0]
	_ = x[Identifier-1]
	_ = x[OpenCurly-2]
	_ = x[CloseCurly-3]
	_ = x[OpenParen-4]
	_ = x[CloseParen-5]
	_ = x[OpenAngled-6]
	_ = x[CloseAngled-7]
	_ = x[Comma-8]
	_ = x[Dot-9]
	_ = x[LineBreak-10]
	_ = x[Equal-11]
	_ = x[Number-12]
	_ = x[Arrow-13]
	_ = x[Semi-14]
	_ = x[Comment-15]
	_ = x[Annotation-16]
	_ = x[StringElement-17]
	_ = x[Indentation-18]
	_ = x[EOF-19]
}

const _Element_name = "InvalidElementIdentifierOpenCurlyCloseCurlyOpenParenCloseParenOpenAngledCloseAngledCommaDotLineBreakEqualNumberArrowSemiCommentAnnotationStringElementIndentationEOF"

var _Element_index = [...]uint8{0, 14, 24, 33, 43, 52, 62, 72, 83, 88, 91, 100, 105, 111, 116, 120, 127, 137, 150, 161, 164}

func (i Element) String() string {
	if i < 0 || i >= Element(len(_Element_index)-1) {
		return "Element(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Element_name[_Element_index[i]:_Element_index[i+1]]
}
